// Code generated by goctl. DO NOT EDIT.
// Source: worker.proto

package worker

import (
	"context"

	"remarks_monitor/app/worker/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	WorkReq  = pb.WorkReq
	WorkResp = pb.WorkResp

	Worker interface {
		Work(ctx context.Context, in *WorkReq, opts ...grpc.CallOption) (*WorkResp, error)
	}

	defaultWorker struct {
		cli zrpc.Client
	}
)

func NewWorker(cli zrpc.Client) Worker {
	return &defaultWorker{
		cli: cli,
	}
}

func (m *defaultWorker) Work(ctx context.Context, in *WorkReq, opts ...grpc.CallOption) (*WorkResp, error) {
	client := pb.NewWorkerClient(m.cli.Conn())
	return client.Work(ctx, in, opts...)
}
