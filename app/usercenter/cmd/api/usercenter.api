syntax = "v1"

info(
	title: "用户中心服务"
	desc: "用户中心服务"
	author: "violapioggia"
	version: "v1"
)
type User {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Password string `json:"password"`
	Info     string `json:"info"`
}

type (
	RegisterReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq {
	}
	UserInfoResp {
		UserInfo User `json:"userInfo"`
	}
)
//============================> usercenter v1 <============================
//no need login
@server(
	group: user
)
service usercenter {
	
	@doc "register"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)
	
	@doc "login"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)
}

type (
	AddAdminReq {
		Username string `json:"username"`
	}
	AddAdminResp {
		Message string `json:"message"`
	}
)

type (
	RemoveAdminReq {
		Username string `json:"username"`
	}
	RemoveAdminResp {
		Message string `json:"message"`
	}
)
//need login
@server(
	group: user
	jwt: JwtAuth
)
service usercenter {
	
	@doc "get user info"
	@handler detail
	post /user/detail (UserInfoReq) returns (UserInfoResp)
	
	@handler addAdmin
	post /addAdmin (AddAdminReq) returns (AddAdminResp)
	
	@handler removeAdmin
	post /removeAdmin (RemoveAdminReq) returns (RemoveAdminResp)
	
}