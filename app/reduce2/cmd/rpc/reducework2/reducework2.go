// Code generated by goctl. DO NOT EDIT.
// Source: reduce2.proto

package reducework2

import (
	"context"

	"remarks_monitor/app/reduce2/cmd/rpc/reduce2"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReduceWorkReq  = reduce2.ReduceWorkReq
	ReduceWorkResp = reduce2.ReduceWorkResp

	ReduceWork2 interface {
		ReduceWork2(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error)
	}

	defaultReduceWork2 struct {
		cli zrpc.Client
	}
)

func NewReduceWork2(cli zrpc.Client) ReduceWork2 {
	return &defaultReduceWork2{
		cli: cli,
	}
}

func (m *defaultReduceWork2) ReduceWork2(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error) {
	client := reduce2.NewReduceWork2Client(m.cli.Conn())
	return client.ReduceWork2(ctx, in, opts...)
}
