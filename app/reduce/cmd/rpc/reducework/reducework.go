// Code generated by goctl. DO NOT EDIT.
// Source: reduce.proto

package reducework

import (
	"context"

	"remarks_monitor/app/reduce/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReduceWorkReq  = pb.ReduceWorkReq
	ReduceWorkResp = pb.ReduceWorkResp

	ReduceWork interface {
		ReduceWork(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error)
	}

	defaultReduceWork struct {
		cli zrpc.Client
	}
)

func NewReduceWork(cli zrpc.Client) ReduceWork {
	return &defaultReduceWork{
		cli: cli,
	}
}

func (m *defaultReduceWork) ReduceWork(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error) {
	client := pb.NewReduceWorkClient(m.cli.Conn())
	return client.ReduceWork(ctx, in, opts...)
}
