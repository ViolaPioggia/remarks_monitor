// Code generated by goctl. DO NOT EDIT.
// Source: master.proto

package master

import (
	"context"

	"remarks_monitor/app/master/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMapReq  = pb.GetMapReq
	GetMapResp = pb.GetMapResp
	WorkReq    = pb.WorkReq
	WorkResp   = pb.WorkResp

	Master interface {
		Master(ctx context.Context, in *WorkReq, opts ...grpc.CallOption) (*WorkResp, error)
		GetMap(ctx context.Context, in *GetMapReq, opts ...grpc.CallOption) (*GetMapResp, error)
	}

	defaultMaster struct {
		cli zrpc.Client
	}
)

func NewMaster(cli zrpc.Client) Master {
	return &defaultMaster{
		cli: cli,
	}
}

func (m *defaultMaster) Master(ctx context.Context, in *WorkReq, opts ...grpc.CallOption) (*WorkResp, error) {
	client := pb.NewMasterClient(m.cli.Conn())
	return client.Master(ctx, in, opts...)
}

func (m *defaultMaster) GetMap(ctx context.Context, in *GetMapReq, opts ...grpc.CallOption) (*GetMapResp, error) {
	client := pb.NewMasterClient(m.cli.Conn())
	return client.GetMap(ctx, in, opts...)
}
