// Code generated by goctl. DO NOT EDIT.
// Source: input.proto

package input

import (
	"context"

	"remarks_monitor/app/input/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	InputReq  = pb.InputReq
	InputResp = pb.InputResp

	Input interface {
		Input(ctx context.Context, in *InputReq, opts ...grpc.CallOption) (*InputResp, error)
	}

	defaultInput struct {
		cli zrpc.Client
	}
)

func NewInput(cli zrpc.Client) Input {
	return &defaultInput{
		cli: cli,
	}
}

func (m *defaultInput) Input(ctx context.Context, in *InputReq, opts ...grpc.CallOption) (*InputResp, error) {
	client := pb.NewInputClient(m.cli.Conn())
	return client.Input(ctx, in, opts...)
}
