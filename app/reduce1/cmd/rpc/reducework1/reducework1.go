// Code generated by goctl. DO NOT EDIT.
// Source: reduce1.proto

package reducework1

import (
	"context"

	"remarks_monitor/app/reduce1/cmd/rpc/reduce1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReduceWorkReq  = reduce1.ReduceWorkReq
	ReduceWorkResp = reduce1.ReduceWorkResp

	ReduceWork1 interface {
		ReduceWork1(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error)
	}

	defaultReduceWork1 struct {
		cli zrpc.Client
	}
)

func NewReduceWork1(cli zrpc.Client) ReduceWork1 {
	return &defaultReduceWork1{
		cli: cli,
	}
}

func (m *defaultReduceWork1) ReduceWork1(ctx context.Context, in *ReduceWorkReq, opts ...grpc.CallOption) (*ReduceWorkResp, error) {
	client := reduce1.NewReduceWork1Client(m.cli.Conn())
	return client.ReduceWork1(ctx, in, opts...)
}
